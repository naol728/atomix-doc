import{_ as e,c as a,o as t,aj as o}from"./chunks/framework.7kMuBPYx.js";const b=JSON.parse('{"title":"Changelog","description":"","frontmatter":{},"headers":[],"relativePath":"guide/changelog.md","filePath":"guide/changelog.md"}'),i={name:"guide/changelog.md"},l=o('<h1 id="changelog" tabindex="-1">Changelog <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;Changelog&quot;">​</a></h1><blockquote><p>All notable changes to <strong>Atomix</strong> will be documented in this file.<br> This project adheres to <a href="https://semver.org/" target="_blank" rel="noreferrer">Semantic Versioning</a>.</p></blockquote><hr><h2 id="_1-0-2-—-2025-07-14" tabindex="-1">[1.0.2] — 2025-07-14 <a class="header-anchor" href="#_1-0-2-—-2025-07-14" aria-label="Permalink to &quot;[1.0.2] — 2025-07-14&quot;">​</a></h2><h3 id="✨-features" tabindex="-1">✨ Features <a class="header-anchor" href="#✨-features" aria-label="Permalink to &quot;✨ Features&quot;">​</a></h3><ul><li>Added <code>AtomixContext</code> to provide global store access via React context.</li><li>Introduced <code>useAtomix</code> hook for subscribing to store state via selectors.</li><li>Introduced <code>useActions</code> hook to access actions defined in <code>createAtom</code>.</li><li>Enhanced <code>subscribe()</code> to support selectors with deep equality comparison.</li></ul><h3 id="🐛-bug-fixes" tabindex="-1">🐛 Bug Fixes <a class="header-anchor" href="#🐛-bug-fixes" aria-label="Permalink to &quot;🐛 Bug Fixes&quot;">​</a></h3><ul><li>Fixed stale closure issue in React bindings.</li><li>Resolved type inference issue for generic listener functions.</li></ul><hr><h2 id="_0-0-2-—-2025-07-10" tabindex="-1">[0.0.2] — 2025-07-10 <a class="header-anchor" href="#_0-0-2-—-2025-07-10" aria-label="Permalink to &quot;[0.0.2] — 2025-07-10&quot;">​</a></h2><h3 id="✨-features-1" tabindex="-1">✨ Features <a class="header-anchor" href="#✨-features-1" aria-label="Permalink to &quot;✨ Features&quot;">​</a></h3><ul><li>Initial core API implementation: <ul><li><code>createStore()</code></li><li><code>useStore</code></li><li><code>subscribe()</code></li><li><code>setState()</code> and <code>getState()</code></li></ul></li></ul><h3 id="🛠-improvements" tabindex="-1">🛠 Improvements <a class="header-anchor" href="#🛠-improvements" aria-label="Permalink to &quot;🛠 Improvements&quot;">​</a></h3><ul><li>Established documentation structure using VitePress.</li></ul><hr><h2 id="_0-0-1-—-2025-07-01" tabindex="-1">[0.0.1] — 2025-07-01 <a class="header-anchor" href="#_0-0-1-—-2025-07-01" aria-label="Permalink to &quot;[0.0.1] — 2025-07-01&quot;">​</a></h2><ul><li>Initial project scaffolding using: <ul><li><code>pnpm</code> for package management</li><li><code>tsup</code> for bundling</li><li><code>vitepress</code> for documentation</li></ul></li></ul><hr><h2 id="🔗-related" tabindex="-1">🔗 Related <a class="header-anchor" href="#🔗-related" aria-label="Permalink to &quot;🔗 Related&quot;">​</a></h2><ul><li>📦 <a href="https://github.com/naol728/Atomix/releases" target="_blank" rel="noreferrer">GitHub Releases</a></li></ul>',20),r=[l];function s(n,c,d,u,h,g){return t(),a("div",null,r)}const f=e(i,[["render",s]]);export{b as __pageData,f as default};
